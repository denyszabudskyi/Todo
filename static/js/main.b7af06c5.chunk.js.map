{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","items","arr","propName","oldItem","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7af06c5.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React, {Component} from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n    state = {\n        term: ''\n    };\n\n    onSearchChange = (e) => {\n        const term =  e.target.value;\n        this.setState({ term });\n        this.props.onSearchChange(term);\n    };\n\n    render() {\n        return (\n            <input type=\"text\"\n                   className=\"form-control search-input\"\n                   placeholder=\"type to search\"\n                   onChange={this.onSearchChange}\n                   value={this.state.term}\n            />\n        );\n    }\n\n};\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;\n","import React, { Component } from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n  render() {\n\n    const { label, onDeleted,\n            onToggleImportant,\n            onToggleDone,\n            important, done } = this.props;\n\n    let classNames = 'todo-list-item';\n    if (done) {\n      classNames += ' done';\n    }\n\n    if (important) {\n      classNames += ' important';\n    }\n\n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={onToggleDone}>\n          {label}\n        </span>\n\n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={onToggleImportant}>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  };\n}\n\n","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted,\n                  onToggleImportant,\n                  onToggleDone }) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n          {...itemProps }\n          onDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n        />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;\n","import React, {Component} from 'react';\n\nimport './item-status-filter.css';\n\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        {name: 'all', label: 'All'},\n        {name: 'active', label: 'Active'},\n        {name: 'done', label: 'Done'}\n    ];\n\n\n    render() {\n\n        const {filter, onFilterChange} = this.props;\n\n\n        const buttons = this.buttons.map(({name, label}) => {\n            const isActive = filter === name;\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n            return (\n                <button type=\"button\"\n                        className={`btn ${clazz}`}\n                        key={name}\n                        onClick={() => onFilterChange(name)} >\n                    {label}\n                </button>\n            );\n        });\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        );\n    }\n}\n","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;\n","import React, { Component } from 'react';\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n\n  state = {\n    label: ''\n  };\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({\n      label: ''\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"item-add-form d-flex\"\n            onSubmit={this.onSubmit}>\n\n        <input type=\"text\"\n               className=\"form-control\"\n               onChange={this.onLabelChange}\n               placeholder=\"What needs to be done\"\n               value={this.state.label} />\n        <button\n          className=\"btn btn-outline-secondary\">\n          Add Item\n        </button>\n      </form>\n    );\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React, {Component} from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\n\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch')\n        ],\n        term: '',\n        filter: 'all' // active, all, done\n    };\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        }\n    }\n\n    deleteItem = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n\n            const newArray = [\n                ...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1)\n            ];\n\n            return {\n                todoData: newArray\n            };\n        });\n    };\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n\n        this.setState(({todoData}) => {\n            const newArr = [\n                ...todoData,\n                newItem\n            ];\n\n            return {\n                todoData: newArr\n            };\n        });\n\n    };\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        const oldItem = arr[idx];\n        const newItem = {\n            ...oldItem,\n            [propName]: !oldItem[propName]\n        };\n\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ];\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            };\n        });\n    };\n\n    onToggleImportant = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            };\n        });\n    };\n\n    onSearchChange = (term) => {\n        this.setState({term});\n    };\n\n    search(items, term) {\n        if (term.length === 0) {\n            return items;\n        }\n        return items.filter((item) => {\n            return item.label\n                .toLowerCase()\n                .indexOf(term.toLowerCase()) > -1;\n        })\n    }\n\n    filter = (items, filter) => {\n\n        switch (filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter((item) => !item.done);\n            case 'done':\n                return items.filter((item) => item.done);\n            default:\n                return items;\n        }\n\n    }\n\n    onFilterChange = (filter) => {\n        this.setState({ filter });\n    }\n\n    render() {\n\n        const {todoData, term, filter} = this.state;\n\n        const visibleItems = this.filter(\n            this.search(todoData, term), filter);\n\n        const doneCount = todoData\n            .filter((el) => el.done).length;\n\n        const todoCount = todoData.length - doneCount;\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={doneCount}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\n                    <ItemStatusFilter\n                        filter={filter}\n                        onFilterChange={this.onFilterChange}\n                    />\n                </div>\n\n                <TodoList\n                    todos={visibleItems}\n                    onDeleted={this.deleteItem}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone}\n                />\n\n                <ItemAddForm onItemAdded={this.addItem}/>\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}